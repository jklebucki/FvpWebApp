@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 class="display-4">FVP Importer - konfiguracja źródeł danych</h1>
    <p></p>
</div>

<div>
    <div class="row mb-2">
        <div class="offset-2 col-8">
            <table id="sources" class="table table-bordered table-hover table-sm" style="width:100%">
                <thead>
                    <tr>
                        <th>Kod źródła</th>
                        <th>Szczegóły</th>
                        <th>Lokalizacja</th>
                        <th>Akcje</th>
                        <th></th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
<div id="app">
    <div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="infoTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-70" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="infoTitle">Szczegóły źródła danych</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="infoBody">
                    <div class="row">
                        <div class="col-6">
                            <div class="card"> 
                                <div class="card-body">
                                    <div class="text-center font-weight-bolder mb-1">DEFINICJA ŹRÓDŁA</div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mt-2 mb-1">
                                            <label class="col-5" for="source-code">Kod</label>
                                            <input v-model="sourceConfig.source.code" type="text"
                                                    class="form-control col-7" id="source-code">
                                        </div>
                                    </div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mb-1">
                                            <label class="col-5" for="source-descryption">Opis</label>
                                            <input v-model="sourceConfig.source.description" type="text"
                                                    class="form-control col-7" id="source-descryption">
                                        </div>
                                    </div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mb-1">
                                            <label class="col-5" for="source-type">Typ danych</label>
                                            <input v-model="sourceConfig.source.type" type="text"
                                                    class="form-control col-7" id="source-type">
                                        </div>
                                    </div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mb-1">
                                            <label class="col-5" for="source-address">Lokalizacja</label>
                                            <input v-model="sourceConfig.source.address" type="text"
                                                    class="form-control col-7" id="source-address">
                                        </div>
                                    </div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mb-1">
                                            <label class="col-5" for="source-dbName">Baza danych</label>
                                            <input v-model="sourceConfig.source.dbName" type="text"
                                                    class="form-control col-7" id="source-dbName">
                                        </div>
                                    </div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mb-1">
                                            <label class="col-5" for="source-username">Użytkownik</label>
                                            <input v-model="sourceConfig.source.username" type="text"
                                                    class="form-control col-7" id="source-username">
                                        </div>
                                    </div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mb-2">
                                            <label class="col-5" for="source-username">Hasło</label>
                                            <input v-model="sourceConfig.source.password" type="password"
                                                    class="form-control col-7 pass" id="source-password">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="text-center mt-1 mb-1 font-weight-bolder">DEFINICJA DEKRETÓW</div>
                            <div class="row mb-1">
                                <div class="col-12">
                                    <div class="input-group">
                                        <input v-model="account" type="text" class="form-control" placeholder="Konto" aria-label="Konto">
                                        <div class="input-group-append">
                                            <button v-on:click="generateDecrees" type="button" class="btn btn-outline-primary">Generuj dekrety</button> 
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <table style="width: 100%" class="table table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th style="width: 10%">Kol.</th>
                                        <th>Konto</th>
                                        <th style="width: 25%">WN</th>
                                        <th style="width: 25%">MA</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="record in sourceConfig.source.accountingRecords">
                                        <td>{{ record.recordOrder }}</td>
                                        <td><input class="form-control" type="text" v-model="record.account"></td>
                                        <td>
                                            <select v-on:change="setValAccRec(record,'credit')" v-model="record.credit" class="custom-select" id="debitSelect">
                                                <option selected>{{ record.credit }}</option>
                                                <option value="netto">netto</option>
                                                <option value="brutto">brutto</option>
                                                <option value="vat">vat</option>
                                                <option value="">----</option>
                                            </select>
                                        </td>
                                        <td>
                                            <select v-on:change="setValAccRec(record,'debit')" v-model="record.debit" class="custom-select" id="debitSelect">
                                                <option selected>{{ record.debit }}</option>
                                                <option value="netto">netto</option>
                                                <option value="brutto">brutto</option>
                                                <option value="vat">vat</option>
                                                <option value="">----</option>
                                            </select>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-6">
                            <div class="card"> 
                                <div class="card-body">
                                    <div class="text-center font-weight-bolder mb-1">DOCELOWY SYSTEM FK</div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mt-2 mb-1">
                                            <label class="col-5" for="source-target">Nazwa systemu</label>
                                            <select v-model="sourceConfig.source.targetId" class="custom-select form-control col-7" id="source-target">
                                                <option v-for='tar in targets' v-bind:value="tar.targetId">{{ tar.descryption }}</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mt-3"> 
                                <div class="card-body">
                                    <div class="text-center font-weight-bolder mb-1">DEFINICJA DOKUMENTU FK</div>
                                    <div class="form-inline">
                                        <div class="form-group col-12 mt-2 mb-1">
                                            <label class="col-5" for="source-documentShortcut">Skrót dokumentu</label>
                                            <input v-model="sourceConfig.targetDocumentSettings.documentShortcut" type="text"
                                                    class="form-control col-7" id="source-documentShortcut">
                                        </div>
                                        <div class="form-group col-12 mt-2 mb-1">
                                            <label class="col-5" for="source-vatRegisterId">Domyślny rejestr VAT</label>
                                            <select v-model="sourceConfig.targetDocumentSettings.vatRegisterId" class="custom-select form-control col-7" id="source-vatRegisterId">
                                                <option v-for='vat in vats' v-bind:value="vat.vatRegisterId">{{ vat.name }}</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-3"> 
                                <div class="text-center font-weight-bolder mb-1">REJESTRY VAT DLA STAWEK</div>
                                <button v-on:click="addVatRegister" class="btn btn-outline-primary">Dodaj rejestr VAT</button>
                                <table style="width: 100%" class="table table-bordered table-sm mt-1">
                                    <thead>
                                        <tr>
                                            <th style="width: 30%">Stawka</th>
                                            <th>Rejest</th>
                                            <th>Akcja</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(record, i) in sourceConfig.targetDocumentSettings.vatRegisters">
                                            <td>
                                                <select v-model="record.vatValue" class="custom-select" id="debitSelect">
                                                    <option v-for='vat in vatValues' v-bind:value="vat.vatValue">{{ vat.vatDesc }}</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select v-model="record.erpVatRegisterId" class="custom-select" id="debitSelect">
                                                    <option v-for='vat in vats' v-bind:value="vat.vatRegisterId">{{ vat.name }}</option>
                                                </select>
                                            </td>
                                            <td>
                                                <button class="btn btn-outline-danger" v-on:click="deleteVatRegister(i)"><span class="oi oi-delete"></button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>            
                </div>
                <div class="modal-footer">
                    <div v-if="message !== ''" class="alert alert-success" role="alert">
                        <div class="text-center">{{ message }}</div>
                    </div>
                    <button type="button" class="btn btn-primary" v-on:click="updateSource">Zapisz zmiany</button>
                    <button type="button" class="btn btn-secondary" v-on:click="message = ''" data-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var table
        var app = new Vue({
            el: '#app',
            data: {
                sourceConfig,
                vats: [],
                targets: [],
                account: null,
                message: '',
            },
            mounted: function () {
                axios
                    .get('/settings/getTargetsView')
                    .then(response => (this.targets = response.data))
            },
            watch: {
                sourceConfig: function () {
                    this.sortAccRec()
                }
            },
            methods: {
                generateDecrees: function(){
                    this.sourceConfig.source.accountingRecords = []
                    this.sourceConfig.source.accountingRecords.push({
                        account: this.account,
                        accountingRecordId: 0,
                        credit: '',
                        debit: 'brutto',
                        recordOrder: 1,
                        sign: '+',
                        sourceId: 0,
                    })
                    this.sourceConfig.source.accountingRecords.push({
                        account: this.account,
                        accountingRecordId: 0,
                        credit: 'netto',
                        debit: '',
                        recordOrder: 2,
                        sign: '+',
                        sourceId: 0,
                    })
                    this.sourceConfig.source.accountingRecords.push({
                        account: this.account,
                        accountingRecordId: 0,
                        credit: 'vat',
                        debit: '',
                        recordOrder: 3,
                        sign: '+',
                        sourceId: 0,
                    })
                },
                setValAccRec: function (row, operType) {
                    if (operType == 'debit') {
                        if (row.debit !== '') {
                            row.credit = ''
                        }
                        if (row.credit === '' && row.debit === '') {
                            row.credit = 'brutto'
                        }
                    }
                    if (operType == 'credit') {
                        if (row.credit !== '') {
                            row.debit = ''
                        }
                        if (row.credit === '' && row.debit === '') {
                            row.debit = 'brutto'
                        }
                    }
                },
                sortAccRec: function(){
                    this.sourceConfig.source.accountingRecords.sort(function(a, b) {
                        return a.recordOrder - b.recordOrder;
                    })
                },
                addVatRegister: function(){
                    this.sourceConfig.targetDocumentSettings.vatRegisters.push({
                        erpVatRegisterId: 0,
                        targetDocumentSettingsId: this.sourceConfig.targetDocumentSettings.targetDocumentSettingsId,
                        vatRegisterId: 0,
                        vatValue: 0,
                    })
                },
                deleteVatRegister: function(i){
                    this.sourceConfig.targetDocumentSettings.vatRegisters.splice(i,1)
                },
                updateSource: function(){
                    const headers = { 'Content-Type': 'application/json' }
                    axios
                        .patch('/settings/updateSource', this.sourceConfig, { headers: headers })
                        .then(response => {
                            this.message = response.data.message
                        })
                }
            }
        })
        $(document).ready(function () {
            url = '/DocumentsImportExport/GetSources'
            table = $('#sources').DataTable({
                'dom': 'lfrtip',
                'pageLength': 15,
                'lengthChange': false,
                'lengthMenu': [10, 15, 20, 25, 50, 75, 100],
                'language': datatableLanguage,
                'processing': true,
                'ajax': url,
                'rowId': 'sourceId',
                'columns': [
                    { data: 'code' },
                    { data: 'description' },
                    { data: 'address' },
                    {
                        data: 'sourceId', render(data, type, row) {
                            return '<a onclick="getData(' + data + ')" data-toggle="tooltip" data-placement="top" title="Pokaż szczegóły"><span class="oi oi-eye icon-button"></span></a>'
                        }
                    },
                    { data: 'sourceId' },
                ],
                "createdRow": function (row, data, index) {
                    $('a', row).tooltip()
                },
                'columnDefs': [
                    {
                        'targets': [4],
                        'visible': false,
                        'searchable': true
                    }
                ]
            })
        })

        $(window).on('resize', function () {
            if (table !== null)
                table.columns.adjust();
        });

        function getData(id) {
            $('#modalBody').html()
            axios.get('/Settings/GetSource/' + id)
                .then(response => {
                    if (response.status == 200) {
                        app.sourceConfig = response.data
                        app.account = ''
                    }
                })
                .catch(error => {
                    $('#infoBody').html(error)
                    console.log("AXIOS Error", error)
                })
                .then(function () {
                    $('#infoModal').modal('show')
                    axios
                        .get('/settings/getvatregisters/' + app.sourceConfig.source.targetId)
                        .then(response => (app.vats = response.data))
                })
        }
    </script>
}